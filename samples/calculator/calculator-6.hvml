<!DOCTYPE hvml SYSTEM 'v: MATH'>
<hvml target="html" lang="$STR.substr($SYSTEM.locale, 0, 2)">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <!-- import the Bootstrap assets built in the renderer -->
        <link rel="stylesheet" href="//localhost/_renderer/_builtin/-/assets/bootstrap-5.1.3-dist/css/bootstrap.min.css" />
        <link rel="stylesheet" href="//localhost/_renderer/_builtin/-/assets/bootstrap-icons-1.8.3/bootstrap-icons.css" />

        <update on="$T.map" to="merge">
            {
                "HVML Arbitrary Precision Calculator": "HVML 任意精度计算器",
                "Current Time: ": "当前时间：",
                "←": "删",
                "C": "清",
                "The result scale (": "结果精度（",
                " decimals)": " 位小数）",
            }
        </update>

        <update on="$TIMERS" to="unite">
            [
                { "id" : "clock", "interval" : 500, "active" : "yes" },
            ]
        </update>

        <title>$T.get('HVML Arbitrary Precision Calculator')</title>
    </head>

    <body>
        <div class="px-4 my-5 border-bottom">
            <div class="text-center">
                <h1 class="display-4 fw-bold">$T.get('HVML Arbitrary Precision Calculator')</h1>
                <p class="lead">$T.get('Current Time: ')<span id="clock">$DATETIME.time_prt()</span></p>

                <observe on="$TIMERS" for="expired:clock">
                    <update on="#clock" at="textContent" with="$DATETIME.time_prt()" />
                </observe>
            </div>
        </div>

        <init as="myResult">
            {
                scale: 10,
                exp: "",
            }
        </init>

        <div class="container">
            <div class="mb-3">
                <label for="resultScale" class="form-label">$T.map('The result scale (')<strong id="theScale">$myResult.scale</strong>$T.map(' decimals)')</label>
                <input type="range" class="form-range" min="0" max="100" value="$myResult.scale" hvml-events="change" id="theScaleRange" />
            </div>

            <div class="shadow-none p-3 mb-5 bg-light rounded">
                <p id="theExpression" class="fs-1 text-nowrap fw-bold overflow-scroll text-end">0</p>
            </div>

            <init as="buttons" temporarily >
                [
                    { id: "theBtn7",            text: "7",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtn8",            text: "8",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtn9",            text: "9",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtnBack",         text: "$T.get('←')",    class: "btn-outline-warning" },
                    { id: "theBtnClear",        text: "$T.get('C')",    class: "btn-outline-danger" },
                    { id: "theBtn4",            text: "4",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtn5",            text: "5",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtn6",            text: "6",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtnTimes",        text: "×",              class: "btn-outline-success btn-for-input" },
                    { id: "theBtnDivision",     text: "÷",              class: "btn-outline-success btn-for-input" },
                    { id: "theBtn1",            text: "1",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtn2",            text: "2",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtn3",            text: "3",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtnPlus",         text: "+",              class: "btn-outline-success btn-for-input" },
                    { id: "theBtnMinus",        text: "-",              class: "btn-outline-success btn-for-input" },
                    { id: "theBtn0",            text: "0",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtnDot",          text: ".",              class: "btn-outline-primary btn-for-input" },
                    { id: "theBtnToggleSign",   text: "±",              class: "btn-outline-success" },
                    { id: "theBtnPercent",      text: "%",              class: "btn-outline-success" },
                    { id: "theBtnEqual",        text: "=",              class: "btn-success" },
                ]
            </init>

            <archetype name="button">
                <div class="col">
                    <div class="d-grid gap-2 col-10 mx-auto">
                        <button class="btn $?.class" id="$?.id" hvml-events="click" type="button">$?.text</button>
                    </div>
                </div>
            </archetype>

            <div class=""border border-3>
                <iterate on=0 onlyif=$L.lt($0<,4) with=$MATH.add($0<,1) nosetotail>

                    <div class="row mb-3">
                        <iterate on="$buttons" by="RANGE: FROM $?">
                            <update on="$@" to="append" with="$button" />
                        </iterate>
                    </div>
                </iterate>
            </div>
        </div>

        <observe on="#theScaleRange" for="change">
            <update on="$myResult" at="scale" with="$EJSON.numberify($?.tragetValue)" />
            <update on="#theScale" at="textContent" with="$?.tragetValue" />
        </observe>

        <observe on=".btn-for-input" for="click">
        </observe>

        <observe on="#theBtnBack" for="click">
            <update on="$myResult" at="exp" with="$STR.substr($myResult.exp, 0, -1)" />

            <test with="$myResult.exp">
                <update on="#theExpression" at="textContent" with="$myResult.exp" />

                <differ>
                    <update on="#theExpression" at="textContent" with="0" />
                </differ>
            </test>
        </observe>

        <observe on="#theBtnClear" for="click">
            <update on="$myResult" at="exp" with="" />
            <update on="#theExpression" at="textContent" with="0" />
        </observe>

        <observe on="#theBtnToggleSign" for="click">
            <test with="$myResult.exp">
                <update on="$myResult" at="exp" with="$STR.join('-(', $myResult.exp, ')')" />
                <update on="#theExpression" at="textContent" with="$myResult.exp" />
            </test>
        </observe>

        <observe on="#theBtnPercent" for="click">
            <test with="$myResult.exp">
                <update on="$myResult" at="exp" with="$STR.join('(', $myResult.exp, ')/100')" />
                <update on="#theExpression" at="textContent" with="$myResult.exp" />
            </test>
        </observe>

        <observe on="#theBtnEqual" for="click">
            <choose on="$STREAM.open('pipe:///usr/bin/bc?ARG1=--quiet')">
                <choose on={{ $?.writelines(['scale=$myResult.scale', $myResult.exp]) && $?.writeeof() && $?.readlines(1) }}>
                    <update on="#theExpression" at="textContent" with="$?" />
                </choose>

                <choose on="$STREAM.close($?)" />

                <catch for='*'>
                    <update on="#theExpression" at="textContent" with="ERROR" />
                </catch>
            </choose>
        </observe>

        <div class="container">
            <footer class="d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top">
                <div class="col-md-4 d-flex align-items-center">
                    <a href="https://hvml.fmsoft.cn" class="mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1">
                        <img class="d-block mx-auto mb-4" src="//localhost/_renderer/_builtin/-/assets/hvml.png" alt="" width="32" height="32" />
                    </a>
                    <span class="mb-3 mb-md-0 text-muted">© 2022 HVML Community</span>
                </div>

                <ul class="nav col-md-4 justify-content-end list-unstyled d-flex">
                    <li class="ms-3"><a class="text-muted" href="https://github.com/HVML"><i class="bi bi-github"></i></a></li>
                    <li class="ms-3"><a class="text-muted" href="https://store.fmsoft.cn/campaign/denoteoss-lt"><i class="bi bi-coin"></i></a></li>
                    <li class="ms-3"><a class="text-muted" href="mailto:hvml@fmsoft.cn"><i class="bi bi-envelope-heart-fill"></i></i></a></li>
                </ul>
            </footer>
        </div>

    </body>

</hvml>

